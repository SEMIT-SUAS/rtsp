<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <title>Visualização de Câmeras</title>
  <script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
  <style>
    body {
      font-family: sans-serif;
      background: #f0f0f0;
      padding: 20px;
    }
    .camera {
      display: inline-block;
      margin: 10px;
      padding: 10px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
    }
    video {
      width: 320px;
      height: 180px;
      background: black;
    }
    .link {
      margin-top: 5px;
      font-size: 12px;
      word-break: break-all;
    }
    .copy-btn {
      display: inline-block;
      margin-top: 4px;
      padding: 4px 8px;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 4px;
      font-size: 12px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h2>Visualização das Câmeras</h2>
  <div id="cameras"></div>

  <script>
    fetch('/api/cameras')
      .then(res => res.json())
      .then(cameras => {
        const container = document.getElementById('cameras');
        cameras.forEach(cam => {
          const div = document.createElement('div');
          div.className = 'camera';

          const video = document.createElement('video');
          video.controls = true;
          video.autoplay = true;
          video.muted = true; // para autoplay funcionar sem interação
          video.id = `video_${cam.id}`;
          div.appendChild(video);

          const link = document.createElement('div');
          link.className = 'link';
          const url = `${window.location.origin}${cam.hls}`;
          link.textContent = url;
          div.appendChild(link);

          const copyBtn = document.createElement('button');
          copyBtn.className = 'copy-btn';
          copyBtn.textContent = 'Copiar Link';
          copyBtn.onclick = () => {
            navigator.clipboard.writeText(url);
            copyBtn.textContent = 'Copiado!';
            setTimeout(() => copyBtn.textContent = 'Copiar Link', 1500);
          };
          div.appendChild(copyBtn);

          container.appendChild(div);

          if (Hls.isSupported()) {
            const hls = new Hls();
            hls.loadSource(cam.hls);
            hls.attachMedia(video);
            hls.on(Hls.Events.ERROR, function(event, data) {
              console.error(`HLS.js error for ${cam.id}:`, data);
            });
          } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
            video.src = cam.hls;
          }
        });
      });
  </script>
</body>
</html>

